#include <bits/stdc++.h>

using namespace std;

using ll = long long;
using vi = vector<int>;
using vvi = vector<vector<int>>;
using vl = vector<ll>;
using vvl = vector<vector<ll>>;
using pi = pair<int, int>;
using pl = pair<ll, ll>;


#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define endl '\n'
#define forn(i, n) for(ll i = 0; i < n; i++)
#define fora(i, a, n) for(ll i = a; i < n; i++)
#define readi(e) int e; cin >> e
#define readl(e) ll e; cin >> e
#define reads(e) string e; cin >> e
#define T int tt; cin >> tt; while(tt--)


template<typename U>
void print(U arr) {
	for(auto element: arr) {
		cout << element << " ";
	}
	cout << endl;
}

// read and write into files, rather than standard i/o
void setup(string s) {
	freopen((s+".in").c_str(), "r", stdin);
	freopen((s+".out").c_str(), "w", stdout);
}

const int M = 1e9+7;
const int N = 1000000;

ll pow(int a,int b){
  int ans = 1;
  while(b){
    if(b&1){
      ans = (ans*a)%M;
    }
    a = (a*a)%M;
  }
  return ans;
}

vector<ll> adj[N];
vector<ll> color(N,-1);
vector<ll> one;
vector<ll> two;
void dfs(int v,int col){
  color[v] = col;
  if(col == 0) one.push_back(v);
  else two.push_back(v);
  for(auto it:adj[v]){
    if(color[it] == -1){
      dfs(it,1-color[v]);
    }else if(color[it] == color[v]){
      cout<<-1;
      exit(0);
    }
  }
}
int main()
{
   int n,m;
   cin>>n>>m;
   
   for(int i = 0;i<m;i++){
     int x,y;
     cin>>x>>y;
     adj[x].push_back(y);
     adj[y].push_back(x);
   }
  for(int i = 1;i<=n;i++){
    if(color[i] == -1){
        if(adj[i].size() == 0) continue;
      dfs(i,0);
    }
  }
  cout<<one.size()<<endl;
  for(auto it:one) cout<<it<< " ";
  cout<<endl;
  cout<<two.size()<<endl;
  for(auto it:two) cout<<it<< " ";
  return 0;
}
